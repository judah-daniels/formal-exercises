; SMT-LIBv2 description generated by Yosys 0.18 (git sha1 19ce3b45d6, gcc 11.3.0 -fPIC -Os)
; yosys-smt2-module busyctr
(declare-sort |busyctr_s| 0)
(declare-fun |busyctr_is| (|busyctr_s|) Bool)
(declare-fun |busyctr#0| (|busyctr_s|) (_ BitVec 1)) ; \o_busy
; yosys-smt2-output o_busy 1
; yosys-smt2-register o_busy 1
; yosys-smt2-wire o_busy 1
(define-fun |busyctr_n o_busy| ((state |busyctr_s|)) Bool (= ((_ extract 0 0) (|busyctr#0| state)) #b1))
(declare-fun |busyctr#1| (|busyctr_s|) Bool) ; \i_start_signal
; yosys-smt2-input i_start_signal 1
; yosys-smt2-wire i_start_signal 1
(define-fun |busyctr_n i_start_signal| ((state |busyctr_s|)) Bool (|busyctr#1| state))
(declare-fun |busyctr#2| (|busyctr_s|) Bool) ; \i_reset
; yosys-smt2-input i_reset 1
; yosys-smt2-wire i_reset 1
(define-fun |busyctr_n i_reset| ((state |busyctr_s|)) Bool (|busyctr#2| state))
(declare-fun |busyctr#3| (|busyctr_s|) Bool) ; \i_clk
; yosys-smt2-input i_clk 1
; yosys-smt2-wire i_clk 1
; yosys-smt2-clock i_clk posedge
(define-fun |busyctr_n i_clk| ((state |busyctr_s|)) Bool (|busyctr#3| state))
(declare-fun |busyctr#4| (|busyctr_s|) (_ BitVec 3)) ; { \counter [4] \counter [2] \counter [0] }
(declare-fun |busyctr#5| (|busyctr_s|) (_ BitVec 13)) ; { \counter [15:5] \counter [3] \counter [1] }
; yosys-smt2-register counter 16
; yosys-smt2-wire counter 16
(define-fun |busyctr_n counter| ((state |busyctr_s|)) (_ BitVec 16) (concat ((_ extract 12 2) (|busyctr#5| state)) (concat ((_ extract 2 2) (|busyctr#4| state)) (concat ((_ extract 1 1) (|busyctr#5| state)) (concat ((_ extract 1 1) (|busyctr#4| state)) (concat ((_ extract 0 0) (|busyctr#5| state)) ((_ extract 0 0) (|busyctr#4| state))))))))
(declare-fun |busyctr#6| (|busyctr_s|) (_ BitVec 16)) ; $past$busyctr.v:109$1$0
; yosys-smt2-register $past$busyctr.v:109$1$0 16
(define-fun |busyctr_n $past$busyctr.v:109$1$0| ((state |busyctr_s|)) (_ BitVec 16) (|busyctr#6| state))
(declare-fun |busyctr#7| (|busyctr_s|) (_ BitVec 1)) ; $formal$busyctr.v:108$4_EN
; yosys-smt2-register $formal$busyctr.v:108$4_EN 1
(define-fun |busyctr_n $formal$busyctr.v:108$4_EN| ((state |busyctr_s|)) Bool (= ((_ extract 0 0) (|busyctr#7| state)) #b1))
(declare-fun |busyctr#8| (|busyctr_s|) (_ BitVec 1)) ; $formal$busyctr.v:108$4_CHECK
; yosys-smt2-register $formal$busyctr.v:108$4_CHECK 1
(define-fun |busyctr_n $formal$busyctr.v:108$4_CHECK| ((state |busyctr_s|)) Bool (= ((_ extract 0 0) (|busyctr#8| state)) #b1))
(declare-fun |busyctr#9| (|busyctr_s|) (_ BitVec 1)) ; $formal$busyctr.v:103$3_EN
; yosys-smt2-register $formal$busyctr.v:103$3_EN 1
(define-fun |busyctr_n $formal$busyctr.v:103$3_EN| ((state |busyctr_s|)) Bool (= ((_ extract 0 0) (|busyctr#9| state)) #b1))
(declare-fun |busyctr#10| (|busyctr_s|) (_ BitVec 1)) ; $formal$busyctr.v:103$3_CHECK
; yosys-smt2-register $formal$busyctr.v:103$3_CHECK 1
(define-fun |busyctr_n $formal$busyctr.v:103$3_CHECK| ((state |busyctr_s|)) Bool (= ((_ extract 0 0) (|busyctr#10| state)) #b1))
(declare-fun |busyctr#11| (|busyctr_s|) (_ BitVec 1)) ; $formal$busyctr.v:101$2_EN
; yosys-smt2-register $formal$busyctr.v:101$2_EN 1
(define-fun |busyctr_n $formal$busyctr.v:101$2_EN| ((state |busyctr_s|)) Bool (= ((_ extract 0 0) (|busyctr#11| state)) #b1))
(declare-fun |busyctr#12| (|busyctr_s|) (_ BitVec 1)) ; $formal$busyctr.v:101$2_CHECK
; yosys-smt2-register $formal$busyctr.v:101$2_CHECK 1
(define-fun |busyctr_n $formal$busyctr.v:101$2_CHECK| ((state |busyctr_s|)) Bool (= ((_ extract 0 0) (|busyctr#12| state)) #b1))
; yosys-smt2-assert 0 $assert$busyctr.v:108$34 busyctr.v:108.70-109.50
(define-fun |busyctr_a 0| ((state |busyctr_s|)) Bool (or (= ((_ extract 0 0) (|busyctr#8| state)) #b1) (not (= ((_ extract 0 0) (|busyctr#7| state)) #b1)))) ; $assert$busyctr.v:108$34
; yosys-smt2-assert 1 $assert$busyctr.v:103$33 busyctr.v:103.13-104.28
(define-fun |busyctr_a 1| ((state |busyctr_s|)) Bool (or (= ((_ extract 0 0) (|busyctr#10| state)) #b1) (not (= ((_ extract 0 0) (|busyctr#9| state)) #b1)))) ; $assert$busyctr.v:103$33
; yosys-smt2-assert 2 $assert$busyctr.v:101$32 busyctr.v:101.26-102.27
(define-fun |busyctr_a 2| ((state |busyctr_s|)) Bool (or (= ((_ extract 0 0) (|busyctr#12| state)) #b1) (not (= ((_ extract 0 0) (|busyctr#11| state)) #b1)))) ; $assert$busyctr.v:101$32
; yosys-smt2-anyseq busyctr#13 1 $auto$setundef.cc:501:execute$84
(declare-fun |busyctr#13| (|busyctr_s|) (_ BitVec 1)) ; $auto$rtlil.cc:3130:Anyseq$85
(define-fun |busyctr#14| ((state |busyctr_s|)) Bool (distinct (concat ((_ extract 12 2) (|busyctr#5| state)) (concat ((_ extract 2 2) (|busyctr#4| state)) (concat ((_ extract 1 1) (|busyctr#5| state)) (concat ((_ extract 1 1) (|busyctr#4| state)) (concat ((_ extract 0 0) (|busyctr#5| state)) ((_ extract 0 0) (|busyctr#4| state))))))) #b0000000000000000)) ; $ne$busyctr.v:101$19_Y
(define-fun |busyctr#15| ((state |busyctr_s|)) (_ BitVec 1) (ite (|busyctr#14| state) (|busyctr#0| state) (|busyctr#13| state))) ; $0$formal$busyctr.v:101$2_CHECK[0:0]$15
(define-fun |busyctr#16| ((state |busyctr_s|)) (_ BitVec 1) (ite (|busyctr#14| state) #b1 #b0)) ; $0$formal$busyctr.v:101$2_EN[0:0]$16
(define-fun |busyctr#17| ((state |busyctr_s|)) Bool (not (or  (= ((_ extract 0 0) (|busyctr#0| state)) #b1) false))) ; $logic_not$busyctr.v:104$20_Y
; yosys-smt2-anyseq busyctr#18 1 $auto$setundef.cc:501:execute$86
(declare-fun |busyctr#18| (|busyctr_s|) (_ BitVec 1)) ; $auto$rtlil.cc:3130:Anyseq$87
(define-fun |busyctr#19| ((state |busyctr_s|)) (_ BitVec 1) (ite (|busyctr#14| state) (|busyctr#18| state) (ite (|busyctr#17| state) #b1 #b0))) ; $0$formal$busyctr.v:103$3_CHECK[0:0]$17
(define-fun |busyctr#20| ((state |busyctr_s|)) (_ BitVec 1) (ite (|busyctr#14| state) #b0 #b1)) ; $0$formal$busyctr.v:103$3_EN[0:0]$18
; yosys-smt2-anyseq busyctr#21 1 $auto$setundef.cc:501:execute$82
(declare-fun |busyctr#21| (|busyctr_s|) (_ BitVec 1)) ; $auto$rtlil.cc:3130:Anyseq$83
(define-fun |busyctr#22| ((state |busyctr_s|)) (_ BitVec 17) (bvsub (concat #b0 (|busyctr#6| state)) #b00000000000000001)) ; { $sub$busyctr.v:109$30_Y [31] $sub$busyctr.v:109$30_Y [15:0] }
(define-fun |busyctr#23| ((state |busyctr_s|)) Bool (distinct (concat #b0000000000000000 (concat ((_ extract 12 2) (|busyctr#5| state)) (concat ((_ extract 2 2) (|busyctr#4| state)) (concat ((_ extract 1 1) (|busyctr#5| state)) (concat ((_ extract 1 1) (|busyctr#4| state)) (concat ((_ extract 0 0) (|busyctr#5| state)) ((_ extract 0 0) (|busyctr#4| state)))))))) (concat ((_ extract 16 16) (|busyctr#22| state)) (concat ((_ extract 16 16) (|busyctr#22| state)) (concat ((_ extract 16 16) (|busyctr#22| state)) (concat ((_ extract 16 16) (|busyctr#22| state)) (concat ((_ extract 16 16) (|busyctr#22| state)) (concat ((_ extract 16 16) (|busyctr#22| state)) (concat ((_ extract 16 16) (|busyctr#22| state)) (concat ((_ extract 16 16) (|busyctr#22| state)) (concat ((_ extract 16 16) (|busyctr#22| state)) (concat ((_ extract 16 16) (|busyctr#22| state)) (concat ((_ extract 16 16) (|busyctr#22| state)) (concat ((_ extract 16 16) (|busyctr#22| state)) (concat ((_ extract 16 16) (|busyctr#22| state)) (concat ((_ extract 16 16) (|busyctr#22| state)) (concat ((_ extract 16 16) (|busyctr#22| state)) (|busyctr#22| state)))))))))))))))))) ; $ne$busyctr.v:109$31_Y
(define-fun |busyctr#24| ((state |busyctr_s|)) Bool (not (or  (|busyctr#2| state) false))) ; $logic_not$busyctr.v:108$26_Y
(define-fun |busyctr#25| ((state |busyctr_s|)) Bool (and (or  (|busyctr#14| state) false) (or  (|busyctr#24| state) false))) ; $logic_and$busyctr.v:108$27_Y
(define-fun |busyctr#26| ((state |busyctr_s|)) Bool (distinct (concat ((_ extract 12 2) (|busyctr#5| state)) (concat ((_ extract 2 2) (|busyctr#4| state)) (concat ((_ extract 1 1) (|busyctr#5| state)) (concat ((_ extract 1 1) (|busyctr#4| state)) (concat ((_ extract 0 0) (|busyctr#5| state)) ((_ extract 0 0) (|busyctr#4| state))))))) #b0000000000010101)) ; $ne$busyctr.v:108$28_Y
(define-fun |busyctr#27| ((state |busyctr_s|)) Bool (and (or  (|busyctr#25| state) false) (or  (|busyctr#26| state) false))) ; $logic_and$busyctr.v:108$29_Y
(define-fun |busyctr#28| ((state |busyctr_s|)) (_ BitVec 1) (ite (|busyctr#27| state) (ite (|busyctr#23| state) #b1 #b0) (|busyctr#21| state))) ; $0$formal$busyctr.v:108$4_CHECK[0:0]$23
(define-fun |busyctr#29| ((state |busyctr_s|)) (_ BitVec 1) (ite (|busyctr#27| state) #b1 #b0)) ; $0$formal$busyctr.v:108$4_EN[0:0]$24
(define-fun |busyctr#30| ((state |busyctr_s|)) (_ BitVec 16) (bvsub (concat ((_ extract 12 2) (|busyctr#5| state)) (concat ((_ extract 2 2) (|busyctr#4| state)) (concat ((_ extract 1 1) (|busyctr#5| state)) (concat ((_ extract 1 1) (|busyctr#4| state)) (concat ((_ extract 0 0) (|busyctr#5| state)) ((_ extract 0 0) (|busyctr#4| state))))))) #b0000000000000001)) ; $sub$busyctr.v:71$9_Y
(define-fun |busyctr#31| ((state |busyctr_s|)) (_ BitVec 13) (ite (|busyctr#14| state) (concat ((_ extract 15 5) (|busyctr#30| state)) (concat ((_ extract 3 3) (|busyctr#30| state)) ((_ extract 1 1) (|busyctr#30| state)))) (|busyctr#5| state))) ; $auto$rtlil.cc:2456:Mux$104
(define-fun |busyctr#32| ((state |busyctr_s|)) Bool (not (or  (= ((_ extract 0 0) (|busyctr#4| state)) #b1) (= ((_ extract 0 0) (|busyctr#5| state)) #b1) (= ((_ extract 1 1) (|busyctr#4| state)) #b1) (= ((_ extract 1 1) (|busyctr#5| state)) #b1) (= ((_ extract 2 2) (|busyctr#4| state)) #b1) (= ((_ extract 2 2) (|busyctr#5| state)) #b1) (= ((_ extract 3 3) (|busyctr#5| state)) #b1) (= ((_ extract 4 4) (|busyctr#5| state)) #b1) (= ((_ extract 5 5) (|busyctr#5| state)) #b1) (= ((_ extract 6 6) (|busyctr#5| state)) #b1) (= ((_ extract 7 7) (|busyctr#5| state)) #b1) (= ((_ extract 8 8) (|busyctr#5| state)) #b1) (= ((_ extract 9 9) (|busyctr#5| state)) #b1) (= ((_ extract 10 10) (|busyctr#5| state)) #b1) (= ((_ extract 11 11) (|busyctr#5| state)) #b1) (= ((_ extract 12 12) (|busyctr#5| state)) #b1)))) ; $eq$busyctr.v:68$6_Y
(define-fun |busyctr#33| ((state |busyctr_s|)) Bool (and (or  (|busyctr#1| state) false) (or  (|busyctr#32| state) false))) ; $logic_and$busyctr.v:68$7_Y
(define-fun |busyctr#34| ((state |busyctr_s|)) Bool (or  (|busyctr#2| state) (|busyctr#33| state))) ; $auto$opt_dff.cc:253:combine_resets$90
(define-fun |busyctr#35| ((state |busyctr_s|)) (_ BitVec 13) (ite (|busyctr#34| state) #b0000000000000 (|busyctr#31| state))) ; $auto$rtlil.cc:2456:Mux$106
(define-fun |busyctr#36| ((state |busyctr_s|)) (_ BitVec 16) (ite (|busyctr#14| state) (|busyctr#30| state) (concat ((_ extract 12 2) (|busyctr#5| state)) (concat #b0 (concat ((_ extract 1 1) (|busyctr#5| state)) (concat #b0 (concat ((_ extract 0 0) (|busyctr#5| state)) #b0))))))) ; $procmux$65_Y
(define-fun |busyctr#37| ((state |busyctr_s|)) (_ BitVec 16) (ite (|busyctr#33| state) #b0000000000010101 (|busyctr#36| state))) ; $procmux$68_Y
(define-fun |busyctr#38| ((state |busyctr_s|)) Bool (or  (|busyctr#33| state) (|busyctr#14| state))) ; $auto$opt_dff.cc:194:make_patterns_logic$94
(define-fun |busyctr#39| ((state |busyctr_s|)) (_ BitVec 3) (ite (|busyctr#38| state) (concat ((_ extract 4 4) (|busyctr#37| state)) (concat ((_ extract 2 2) (|busyctr#37| state)) ((_ extract 0 0) (|busyctr#37| state)))) (|busyctr#4| state))) ; $auto$rtlil.cc:2456:Mux$100
(define-fun |busyctr#40| ((state |busyctr_s|)) (_ BitVec 3) (ite (|busyctr#2| state) #b000 (|busyctr#39| state))) ; $auto$rtlil.cc:2456:Mux$102
(define-fun |busyctr#41| ((state |busyctr_s|)) (_ BitVec 1) (ite (|busyctr#32| state) (ite (|busyctr#1| state) #b1 #b0) #b1)) ; $procmux$60_Y
(define-fun |busyctr#42| ((state |busyctr_s|)) Bool (= (concat ((_ extract 12 2) (|busyctr#5| state)) (concat ((_ extract 2 2) (|busyctr#4| state)) (concat ((_ extract 1 1) (|busyctr#5| state)) (concat ((_ extract 1 1) (|busyctr#4| state)) (concat ((_ extract 0 0) (|busyctr#5| state)) ((_ extract 0 0) (|busyctr#4| state))))))) #b0000000000000001)) ; $eq$busyctr.v:80$11_Y
(define-fun |busyctr#43| ((state |busyctr_s|)) Bool (or  (|busyctr#2| state) false  (|busyctr#42| state) false)) ; $logic_or$busyctr.v:80$12_Y
(define-fun |busyctr#44| ((state |busyctr_s|)) (_ BitVec 1) (ite (|busyctr#43| state) #b0 (|busyctr#41| state))) ; $auto$rtlil.cc:2456:Mux$98
(define-fun |busyctr_a| ((state |busyctr_s|)) Bool (and
  (|busyctr_a 0| state)
  (|busyctr_a 1| state)
  (|busyctr_a 2| state)
))
(define-fun |busyctr_u| ((state |busyctr_s|)) Bool true)
(define-fun |busyctr_i| ((state |busyctr_s|)) Bool (and
  (= (= ((_ extract 0 0) (|busyctr#0| state)) #b1) false) ; o_busy
  (= (concat ((_ extract 12 2) (|busyctr#5| state)) (concat ((_ extract 2 2) (|busyctr#4| state)) (concat ((_ extract 1 1) (|busyctr#5| state)) (concat ((_ extract 1 1) (|busyctr#4| state)) (concat ((_ extract 0 0) (|busyctr#5| state)) ((_ extract 0 0) (|busyctr#4| state))))))) #b0000000000000000) ; counter
  (= (= ((_ extract 0 0) (|busyctr#7| state)) #b1) false) ; $formal$busyctr.v:108$4_EN
  (= (= ((_ extract 0 0) (|busyctr#9| state)) #b1) false) ; $formal$busyctr.v:103$3_EN
  (= (= ((_ extract 0 0) (|busyctr#11| state)) #b1) false) ; $formal$busyctr.v:101$2_EN
))
(define-fun |busyctr_h| ((state |busyctr_s|)) Bool true)
(define-fun |busyctr_t| ((state |busyctr_s|) (next_state |busyctr_s|)) Bool (and
  (= (|busyctr#15| state) (|busyctr#12| next_state)) ; $procdff$76 $formal$busyctr.v:101$2_CHECK
  (= (|busyctr#16| state) (|busyctr#11| next_state)) ; $procdff$77 $formal$busyctr.v:101$2_EN
  (= (|busyctr#19| state) (|busyctr#10| next_state)) ; $procdff$78 $formal$busyctr.v:103$3_CHECK
  (= (|busyctr#20| state) (|busyctr#9| next_state)) ; $procdff$79 $formal$busyctr.v:103$3_EN
  (= (|busyctr#28| state) (|busyctr#8| next_state)) ; $procdff$74 $formal$busyctr.v:108$4_CHECK
  (= (|busyctr#29| state) (|busyctr#7| next_state)) ; $procdff$75 $formal$busyctr.v:108$4_EN
  (= (concat ((_ extract 12 2) (|busyctr#5| state)) (concat ((_ extract 2 2) (|busyctr#4| state)) (concat ((_ extract 1 1) (|busyctr#5| state)) (concat ((_ extract 1 1) (|busyctr#4| state)) (concat ((_ extract 0 0) (|busyctr#5| state)) ((_ extract 0 0) (|busyctr#4| state))))))) (|busyctr#6| next_state)) ; $procdff$73 $past$busyctr.v:109$1$0
  (= (|busyctr#35| state) (|busyctr#5| next_state)) ; $auto$ff.cc:262:slice$92 { \counter [15:5] \counter [3] \counter [1] }
  (= (|busyctr#40| state) (|busyctr#4| next_state)) ; $auto$ff.cc:262:slice$93 { \counter [4] \counter [2] \counter [0] }
  (= (|busyctr#44| state) (|busyctr#0| next_state)) ; $auto$ff.cc:262:slice$96 \o_busy
)) ; end of module busyctr
; yosys-smt2-topmod busyctr
; end of yosys output
